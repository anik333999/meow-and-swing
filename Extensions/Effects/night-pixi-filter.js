var gdjs;(function(i){class a extends PIXI.Filter{constructor(){const e=void 0,r=["precision mediump float;","","varying vec2 vTextureCoord;","uniform sampler2D uSampler;","uniform float intensity;","uniform float opacity;","","void main(void)","{","   mat3 nightMatrix = mat3(-2.0 * intensity, -1.0 * intensity, 0, -1.0 * intensity, 0, 1.0 * intensity, 0, 1.0 * intensity, 2.0 * intensity);","   gl_FragColor = texture2D(uSampler, vTextureCoord);","   gl_FragColor.rgb = mix(gl_FragColor.rgb, nightMatrix * gl_FragColor.rgb, opacity);","}"].join(`
`),n={intensity:{type:"1f",value:1},opacity:{type:"1f",value:1}};super(e,r,n)}}i.NightPixiFilter=a,a.prototype.constructor=i.NightPixiFilter,i.PixiFiltersTools.registerFilterCreator("Night",new class extends i.PixiFiltersTools.PixiFilterCreator{makePIXIFilter(t,e){return new i.NightPixiFilter}updatePreRender(t,e){}updateDoubleParameter(t,e,r){e!=="intensity"&&e!=="opacity"||(t.uniforms[e]=i.PixiFiltersTools.clampValue(r,0,1))}getDoubleParameter(t,e){return t.uniforms[e]||0}updateStringParameter(t,e,r){}updateColorParameter(t,e,r){}getColorParameter(t,e){return 0}updateBooleanParameter(t,e,r){}})})(gdjs||(gdjs={}));
//# sourceMappingURL=night-pixi-filter.js.map
